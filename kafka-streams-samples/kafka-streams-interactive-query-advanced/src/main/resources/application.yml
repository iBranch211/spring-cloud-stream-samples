spring.cloud.stream.bindings.input:
  destination: play-events
spring.cloud.stream.bindings.inputX:
  destination: song-feed
spring.cloud.stream.kafka.streams.bindings.input:
  consumer:
    valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
spring.cloud.stream.kafka.streams.bindings.inputX:
  consumer:
    valueSerde: io.confluent.kafka.streams.serdes.avro.SpecificAvroSerde
    materializedAs: all-songs
spring.cloud.stream.kafka.streams.binder:
  brokers: localhost
  configuration:
    schema.registry.url: http://localhost:8081
    commit.interval.ms: 1000
spring.cloud.stream.kafka.streams.binder.autoAddPartitions: true
spring.cloud.stream.kafka.streams.binder.minPartitionCount: 4
spring.cloud.stream.kafka.streams.binder.configuration.application.server: localhost:8080

spring.application.name: kafka-streams-iq-advanced-sample